{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "Books-reading project",
    "description": "Documentation for the project Books-reading"
  },
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "servers": [{ "url": "http://localhost:3001" }],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Users",
      "description": "Users endpoints"
    },
    {
      "name": "Books",
      "description": "Books endpoints"
    },
    {
      "name": "Training",
      "description": "Trainings endpoints"
    }

    
  ],
  "paths": {
    "api/auth/signup": {
      "post": {
        "tags": ["Auth"],
        "summary": "User registration",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Registration's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegistrationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RegistrationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          },
          "409": {
            "description": "Provided email already exists",
            "content": {}
          }
        }
      }
    },
    "api/auth/signin": {
      "post": {
        "tags": ["Auth"],
        "summary": "User authorization",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "Authorization's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AuthorizationRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthorizationResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request (invalid request body)",
            "content": {}
          }
        }
      }
    },
    "api/auth/google": {
      "get": {
          "tags": [
              "Auth"
          ],
          "summary": "Google authorization",
          "parameters": [],
          "security": [{ "Bearer": [] }]
        }
  },
    "api/auth/logout": {
      "get": {
        "tags": ["Auth"],
        "summary": "User logout",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "logout's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogoutRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation"
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Check user's status(authorized or not)",
        "parameters": [],
        "security": [{ "Bearer": [] }],
        "requestBody": {
          "description": "User's object",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UsersCurrentRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UsersCurrentResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {}
          }
        }
      }
    },
    "api/books/": {
      "post": {
          "tags": [
              "Books"
          ],
          "summary": "Add book",
          "parameters": [],
          "security": [
              {
                  "Bearer": []
              }
          ],
          "requestBody": {
              "description": "Book's object",
              "required": true,
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/BookRequest"
                      }
                  }
              }
          },
          "responses": {
              "201": {
                  "description": "Successful operation",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/BookResponse"
                          }
                      }
                  }
              },
              "400": {
                  "description": "Bad request (invalid request body)",
                  "content": {}
              }
          }
      },
      "get": {
          "tags": [
              "Books"
          ],
          "summary": "Get book",
          "parameters": [
              {
                  "in": "query",
                  "name": "page",
                  "required": true,
                  "type": "string",
                  "description": "query page"
              },
              {
                  "in": "query",
                  "name": "limit",
                  "required": true,
                  "type": "string",
                  "description": "number of books on one page"
              },
              {
                  "in": "query",
                  "name": "status",
                  "required": true,
                  "type": "string",
                  "description": "book's status"
              }
          ],
          "security": [
              {
                  "Bearer": []
              }
          ],
          "responses": {
              "200": {
                  "description": "Successful operation",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/BookStatusResponse"
                          }
                      }
                  }
              },
              "400": {
                  "description": "Bad request (invalid request body)",
                  "content": {}
              }
          }
      }
  },
    "api/books/:bookId": {
      "put": {
          "tags": [
              "Books"
          ],
          "summary": "Update book's info",
          "parameters": [
              {
                  "in": "path",
                  "name": "bookId",
                  "required": true,
                  "type": "string",
                  "description": "book's id"
              }
          ],
          "security": [
              {
                  "Bearer": []
              }
          ],
          "requestBody": {
              "description": "Review's object",
              "required": true,
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/ReviewRequest"
                      }
                  }
              }
          },
          "responses": {
              "200": {
                  "description": "Successful operation",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/ReviewResponse"
                          }
                      }
                  }
              },
              "400": {
                  "description": "Bad request (invalid request body)",
                  "content": {}
              },
              "404": {
                  "description": "Not found",
                  "content": {}
              }
          }
      },
      "get": {
        "tags": [
            "Books"
        ],
        "summary": "Get book by id",
        "parameters": [],
        "security": [
            {
                "Bearer": []
            }
        ],
        "responses": {
            "200": {
                "description": "Successful operation",
                "content": {
                    "application/json": {
                        "schema": {
                            "$ref": "#/components/schemas/BookStatusResponse"
                        }
                    }
                }
            },
            "400": {
                "description": "Bad request (invalid request body)",
                "content": {}
            }
        }
    },
    "delete": {
      "tags": [
          "Books"
      ],
      "summary": "Delete book by id",
      "parameters": [],
      "security": [{ "Bearer": [] }]
    }
  },
  "api/books/:bookId/:status": {
      "patch": {
          "tags": [
              "Books"
          ],
          "summary": "Update book's status",
          "parameters": [
              {
                  "in": "path",
                  "name": "bookId",
                  "required": true,
                  "type": "string",
                  "description": "book's id"
              }
          ],
          "security": [
              {
                  "Bearer": []
              }
          ],
          "requestBody": {
              "description": "Status object",
              "required": true,
              "content": {
                  "application/json": {
                      "schema": {
                          "$ref": "#/components/schemas/StatusRequest"
                      }
                  }
              }
          },
          "responses": {
              "200": {
                  "description": "Successful operation",
                  "content": {
                      "application/json": {
                          "schema": {
                              "$ref": "#/components/schemas/StatusResponse"
                          }
                      }
                  }
              },
              "400": {
                  "description": "Bad request (invalid request body)",
                  "content": {}
              },
              "404": {
                  "description": "Not found",
                  "content": {}
              }
          }
      }
  },
  "api/training": {
    "post": {
      "tags": ["Training"],
      "summary": "Add training",
      "parameters": []
    },
    "get": {
      "tags": ["Training"],
      "summary": "Get all trainings",
      "parameters": []
    }
  }
  },
  "components": {
    "schemas": {
      "RegistrationRequest": {
        "type": "object",
        "required": ["email", "name", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "qwe"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "RegistrationResponse": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "name": {
              "type": "string",
              "description": "User's name",
              "example": "qwe"
            },
            "userId": {
              "type": "number",
              "description": "User's id",
              "example": "32143232436545474"
            }
        },
        "example": [
          { "email": "1@gmail.com", "userId": "1" },
          { "email": "2@gmail.com", "userId": "2" }
        ]
      },
      "AuthorizationRequest": {
        "type": "object",
        "required": ["email", "password"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "password": {
            "type": "string",
            "description": "User's password",
            "example": "qwerty123"
          }
        }
      },
      "AuthorizationResponse": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "description": "User's email",
              "format": "email"
            },
            "token": {
              "type": "string",
              "description": "User's token",
              "example": "32143232436545474"
            }
        },
        "example": [
          { "email": "1@gmail.com", "token": "321432qweqwe32436545474" },
          { "email": "2@gmail.com", "token": "qweasaasdadsdasdadsqw21" }
        ]
      },
      "LogoutRequest": {
        "type": "object",
        "required": ["id"],
        "properties": {
          "id": {
            "type": "string",
            "description": "User's id",
            "example": "qwdasdasderty123"
          }
        }
      },
      "UsersCurrentRequest": {
        "type": "object",
        "required": ["email", "name"],
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "qwe"
          }
        }
      },
      "UsersCurrentResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email"
          },
          "name": {
            "type": "string",
            "description": "User's name",
            "example": "qwe"
          }
      },
      "example": [
        { "email": "1@gmail.com", "name": "qwe" },
        { "email": "2@gmail.com", "name": "qweqwe" }
      ]
    },
    "BookRequest": {
      "type": "object",
      "required": [
          "title",
          "author",
          "year",
          "pages"
      ],
      "properties": {
          "title": {
              "type": "string",
              "description": "Book's name"
          },
          "author": {
              "type": "string",
              "description": "Book's author"
          },
          "year": {
              "type": "string",
              "description": "Book's year"
          },
          "pages": {
              "type": "string",
              "description": "Number of pages"
          }
      }
  },
  "BookResponse": {
      "type": "object",
      "properties": {
          "title": {
              "type": "string",
              "description": "Book's name"
          },
          "author": {
              "type": "string",
              "description": "Book's author"
          },
          "year": {
              "type": "string",
              "description": "Book's year"
          },
          "pages": {
              "type": "string",
              "description": "Number of pages"
          },
          "rating": {
              "type": "integer",
              "nullable": true,
              "description": "book's rating"
          },
          "review": {
              "type": "string",
              "nullable": true,
              "description": "Book's review"
          },
          "status": {
              "type": "string",
              "description": "Book's status"
          },
          "_id": {
              "type": "string",
              "description": "Book's id"
          }
      }
  },
  "BookStatusResponse": {
      "type": "array",
      "items": {
          "type": "object",
          "properties": {
              "_id": {
                  "type": "string",
                  "description": "Book's id"
              },
              "title": {
                  "type": "string",
                  "description": "Book's name"
              },
              "author": {
                  "type": "string",
                  "description": "Book's author"
              },
              "year": {
                  "type": "string",
                  "description": "Book's year"
              },
              "pages": {
                  "type": "string",
                  "description": "Number of pages"
              },
              "rating": {
                  "type": "integer",
                  "description": "book's rating"
              },
              "review": {
                  "type": "string",
                  "description": "Book's review"
              },
              "status": {
                  "type": "string",
                  "description": "Book's status"
              }
          }
      }
  },
  "ReviewRequest": {
      "type": "object",
      "required": [
          "rating",
          "review"
      ],
      "properties": {
          "rating": {
              "type": "integer",
              "description": "Book's rating"
          },
          "review": {
              "type": "string",
              "description": "Book's review"
          }
      }
  },
  "ReviewResponse": {
      "type": "object",
      "properties": {
          "title": {
              "type": "string",
              "description": "Book's name"
          },
          "author": {
              "type": "string",
              "description": "Book's author"
          },
          "year": {
              "type": "string",
              "description": "Book's year"
          },
          "pages": {
              "type": "string",
              "description": "Number of pages"
          },
          "rating": {
              "type": "integer",
              "description": "book's rating"
          },
          "review": {
              "type": "string",
              "description": "Book's review"
          },
          "status": {
              "type": "string",
              "description": "Book's status"
          },
          "_id": {
              "type": "string",
              "description": "Book's id"
          }
      }
  },
  "StatusRequest": {
      "type": "object",
      "required": [
          "status"
      ],
      "properties": {
          "Status": {
              "type": "string",
              "description": "Book's status"
          }
      }
  },
  "StatusResponse": {
      "type": "object",
      "properties": {
          "title": {
              "type": "string",
              "description": "Book's name"
          },
          "author": {
              "type": "string",
              "description": "Book's author"
          },
          "year": {
              "type": "string",
              "description": "Book's year"
          },
          "pages": {
              "type": "string",
              "description": "Number of pages"
          },
          "rating": {
              "type": "integer",
              "nullable": true,
              "description": "book's rating"
          },
          "review": {
              "type": "string",
              "nullable": true,
              "description": "Book's review"
          },
          "status": {
              "type": "string",
              "description": "Book's status"
          },
          "_id": {
              "type": "string",
              "description": "Book's id"
          }
      }
  }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  }
}
